primary:
  AK:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(30000); 
      page.done();
    message: waiting 30 sec to load AK primary

  AZ:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.click(615, 1100);
      await page.waitForDelay(30000);
      page.done();
    message: clicking on cases for AZ primary
 
  CA:
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    message: using viewport height 3000 for CA

  ID:
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    message: using viewport height 3000 for ID

  IA:
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(30000); 
      page.done();
    message: adding manual wait and using viewport height 3000 for IA

  IN:
    renderSettings:
      viewport:
        width: 1400
        height: 13000
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("#prefix-dismissButton");
      page.click("#prefix-dismissButton"); 
      await page.waitForFunction(()=>document.querySelector("#main-content").textContent!=="");
      page.done();
    message: clicking button to get rid of popup, using viewport height 8500 for IN
  
  MA:
    file: pdf
    message: downloading pdf for MA
    
  MI:
    overseerScript: page.manualWait(); await page.waitForDelay(60000); page.done();
    message: waiting 60 sec to load MI

  MN:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("[href='#testing1']");
      page.click("[href='#testing1']");
      await page.waitForDelay(30000);
      page.done();
    message: clicking on testing table for MN

  MT:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load MT
  
  ND:
    requestSettings:
      maxWait: 180000
    overseerScript: page.manualWait(); await page.waitForDelay(150000); page.done();
    message: waiting for 150 seconds to load ND
   
  NE:
    renderSettings:
      viewport:
        width: 2000
    message: using viewport width 2000 for NE
    
  NJ:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(30000);
      await page.waitForSelector("button#overlay-close");
      page.click("button#overlay-close");
      await page.waitForDelay(30000);
      page.done();
    message: close the overlay

  NY:
    renderSettings:
      viewport:
        width: 5000
    message: using viewport width 5000 for NY        

  OK:
    overseerScript: page.manualWait(); await page.waitForDelay(60000); page.done();
    message: waiting 60 sec to load OK

  OR:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("#prefix-dismissButton");
      page.click("#prefix-dismissButton");
      await page.waitForDelay(5000);
      page.click("#prefix-dismissButton");
      await page.waitForFunction(()=>document.querySelector("#main-content").textContent!=="");
      await page.evaluate(() => { document.evaluate("//button[contains(text(),'Demographics, Hospital Capacity and Testing Tables')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("button[ctpclickhere]");
      await page.waitForDelay(5000);
      page.done();
    message: clicking button to get rid of popup for OR, click "Demographics, Hospital Capacity and Testing Tables", waiting 5 sec

  PA:
    overseerScript: page.manualWait(); await page.waitForDelay(60000); page.done();
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    message: waiting 60 sec to load PA and using viewport height 3000

  SC:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load SC

  SD:
    overseerScript: page.manualWait(); await page.waitForDelay(90000); page.done();
    message: waiting 90 sec to load SD

  TX:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load TX

  UT:
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    message: UT dashboard doesn't render in phantomjscloud unless we set a viewport

  WA:
    requestSettings:
      maxWait: 120000
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("[href='#pnlHospAndIcuTbl']");
      page.click("[href='#pnlHospAndIcuTbl']");
      await page.waitForDelay(120000);
      page.done();
    message: clicking on Ventilator data and waiting 120 sec to load WA

  WV:
    overseerScript: page.manualWait(); await page.waitForDelay(90000); page.done();
    message: waiting 90 sec to load WV

secondary:
  AL:
    overseerScript: >
      await page.waitForNavigation({waitUntil:"domcontentloaded"});
      await page.waitForSelector("span:nth-of-type(13)");
      page.click("span:nth-of-type(13)");
      await page.waitForDelay(1000);
      page.done();
    message: custom click logic for AL secondary dashboard

  AR:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load AR secondary

  AS:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("[action='cancel']");
      await page.click("[action='cancel']"); 
      await page.waitForDelay(5000); 
      page.done();
    message: close popup for AS secondary

  CO:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(30000); 
      page.done();
    message: wait for CO dash to avoid blank screenshots

  DE:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("#tab_1[href='#test_tabs_1_content']");
      await page.click("#tab_1[href='#test_tabs_1_content']"); 
      await page.waitForDelay(5000); 
      page.done();
    message: click for DE Total Tests

  FL:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("body.modal-open");
      await page.waitForDelay(1000); 
      await page.keyboard.press("Escape");
      await page.waitForSelector("body:not(.modal-open)");
      await page.waitForDelay(1000); 
      page.done();
    message: clear the 'get your flu shot' pop-up from FL's "what you need to know" page

  IA:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(60000);
      page.done();
    message: adding manual wait for IA secondary

  ID:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("#tabZoneId10");
      await page.hover("#tabZoneId10"); 
      page.done();
    message: custom mouseover logic for ID secondary dashboard

  IN:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load IN secondary

  IL:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("a.ckeditor-accordion-toggler");
      await page.evaluate(() => { document.evaluate("//a[contains(text(),'Statewide Hospital Statistics1')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("a[ctpclickhere]");
      await page.waitForDelay(20000);
      page.done();
    message: expanding hospital section, also waiting an extra 20 seconds to make sure other elements render
  
  KY:
    file: pdf
    message: downloading PDF for KY secondary

  MA:
    file: pdf
    message: downloading pdf for MA secondary

  ME:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("#Accordion1");
      await page.waitForDelay(15000);
      await page.evaluate(() => { document.evaluate("//a[contains(text(),'View a Table of All Reported COVID-19 Tests in Maine')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("a[ctpclickhere]");
      await page.waitForDelay(15000);
      page.done();
    message: expanding 'Table of All Reported COVID-19 Tests' section

  MN:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(15000);
      await page.evaluate(() => { document.evaluate("//*/div[2]/a[contains(text(),'non-COVID')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.parentNode.getElementsByTagName("input")[0].checked = false; });
      await page.waitForDelay(5000);
      page.done();
    message: clear the "non-covid checkbox for hospitalizations"

  MS:
    overseerScript: page.manualWait(); await page.waitForDelay(90000); page.done();
    message: waiting 90 sec to load MS secondary

  NC:
    file: pdf
    message: downloading pdf

  NH:
    file: pdf
    message: downloading pdf
    
  NJ:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load NJ secondary
    
  NY:
    renderSettings:
      viewport:
        width: 5000
    message: using viewport width 5000 for NY        

  OK:
    file: pdf
    message: downloading pdf for OK - daily name is autogenerated by formula   

  PA:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("#ember69");
      page.click("#ember69"); 
      await page.waitForDelay(30000);
      page.done();
    message: custom click logic for PA secondary dashboard

  PR:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(30000);
      page.done();
    message: wait 30 seconds to load PR secondary

  TN:
    file: pdf
    message: downloading PDF for TN secondary

  UT:
    renderSettings:
      viewport:
        width: 1400
        height: 3000
    message: UT dashboard doesn't render in phantomjscloud unless we set a viewport

  WA:
    overseerScript: page.manualWait(); await page.waitForDelay(60000); page.done();
    message: waiting 60 sec to load WA secondary

  WV:
    overseerScript: >
      page.manualWait();  
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'Hospital')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(10000);
      page.done();
    message: clicking on hospital tab of dashboard

tertiary:
  AR:
    renderSettings:
      clipRectangle:
        width: 1400
        height: 1400
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("span.ember-view.tab-title:nth-of-type(4)");
      page.click("span.ember-view.tab-title:nth-of-type(4)");
      await page.waitForDelay(10000);
      page.done();
    message: clicking on "Tests" tab for AR tertiary

  CO:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(30000); 
      page.done();
    message: wait for CO dash to avoid blank screenshots

  DC:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("div.mstrd-DossierViewOnboarding-skipBtn");
      page.click("div.mstrd-DossierViewOnboarding-skipBtn");
      await page.waitForDelay(5000);
      page.done();
    message: clicking skip to get rid of popup for DC, waiting 5 sec

  HI:
    overseerScript: >
      await page.waitForSelector("span.ember-view.tab-title:nth-of-type(2)");
      page.click("span.ember-view.tab-title:nth-of-type(2)");
      await page.waitForDelay(10000);
      page.done()
    message: clicking on 'Hospitalization' tab for HI tertiary

  ID:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      await page.waitForSelector("div#tabZoneId158");
      await page.hover("div#tabZoneId158");
      await page.waitForDelay(1000);
      await page.render.screenshot();        
      page.done();
    message: hover logic to show confirmed/probable cases split on statewide demographics dash.

  IA:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(45000); 
      page.done();
    message: wait for IA tertiary

  IN:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("span.slick-column-name");
      page.click("span.slick-column-name", { button: "right" });
      await page.waitForSelector("#slick-option-autoresize");
      page.click("#slick-option-autoresize");
      page.mouse.move(1, 1);
      await page.waitForDelay(5000);
      page.done();
    message: expand the columns in the data table

  MD:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(20000);
      await page.waitForSelector("div.table-responsive");
      await page.click("div.table-responsive");
      for (var i = 0; i < 1000; i++) { await page.keyboard.down("ArrowRight"); }
      page.done();
    message: Scroll all the way to the right in the data table so we can see the most recent day's column

  ME:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("#Accordion1");
      await page.waitForDelay(15000);
      await page.evaluate(() => { document.evaluate("//a[contains(text(),'View a Table of Maine COVID-19 Current Hospital Use and Capacity Data')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("a[ctpclickhere]");
      await page.waitForDelay(15000);
      page.done();
    message: expanding 'Table of All Reported COVID-19 Tests' section
    
  MT:
    file: pdf
    message: downloading pdf for MT - daily name is autogenerated by formula

  MP:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector(".tab-title:nth-of-type(2)");
      page.click(".tab-title:nth-of-type(2)"); 
      await page.waitForDelay(30000);
      page.done();
    message: custom click logic for MP tertiary dashboard

  NC:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("#\\[Parameters\\]\\.\\[Parameter\\ 7\\]_2 input");
      page.click("#\\[Parameters\\]\\.\\[Parameter\\ 7\\]_2 input"); 
      await page.waitForDelay(10000);
      page.done();
    message: crazy clicking for NC tertiary, waiting 10 seconds

  NE:
    renderSettings:
      viewport:
        width: 2000
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//div[text()='Hospitalized Cases']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("div[ctpclickhere]");
      await page.waitForDelay(20000);
      page.done();

    message: clicking on "Hospitalized Cases".

  NJ:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting 30 sec to load NJ tertiary

  NY:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("a[href*=\"/news/governor-cuomo-updates-new-yorkers-states-progress-during-covid-19-pandemic-\"]");
      page.click("a[href*=\"/news/governor-cuomo-updates-new-yorkers-states-progress-during-covid-19-pandemic-\"]");
      await page.waitForNavigation({waitUntil:"domcontentloaded"});
      await page.render.screenshot();        
      page.done();
    message: click on the first "gov cuomo updates..." link, which should be the latest press release
 
  OH:
    renderSettings:
      viewport:
        width: 1600
    message: forcing wider viewPort to avoid clipping

  RI:
    file: csv
    message: downloading CSV for RI tertiary

  TN:
    renderSettings:
      viewport:
        width: 1100
        height: 1400
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(6000);
      page.mouse.move(999, 672);
      await page.waitForDelay(1000);
      page.done();
    message: hospitalizations for TN tertiary
    
  TX:
    file: xlsx
    message: downloading Excel for TX tertiary

  WA:
    requestSettings:
      maxWait: 180000
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'Healthcare')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(40000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'Percent of all staffed acute care beds')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere1", "ctpclickhere1"); });
      page.click("span[ctpclickhere1]");
      await page.waitForDelay(60000);
      page.done();
    message: clicking on buttons WA tertiary

  WI: 
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(6000);
      await page.waitForSelector("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(2) input"); 
      page.click("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(2) input");
      await page.waitForDelay(5000);
      page.done();
    message: wi probables    

  WV:
    overseerScript: >
      page.manualWait();  
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'Includes Probable and Confirmed Cases (Click to View')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(10000);
      page.done();
    message: clicking on 'total number of cases' box

quaternary:

  AR:
    renderSettings:
      clipRectangle:
        width: 1400
        height: 1400
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("span.ember-view.tab-title:nth-of-type(7)");
      page.click("span.ember-view.tab-title:nth-of-type(7)");
      await page.waitForDelay(10000);
      page.done();
    message: clicking on "Hospital Information" tab for AR quaternary

  FL:
    file: pdf
    message: downloading pdf 

  HI:
    overseerScript: >
      await page.waitForSelector("span.ember-view.tab-title:nth-of-type(3)");
      page.click("span.ember-view.tab-title:nth-of-type(3)");
      await page.waitForDelay(10000);
      page.done()
    message: clicking on 'ICU Beds and Ventilators' tab for HI quaternary

  IA:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(45000); 
      page.done();
    message: wait for IA quaternary

  ME:
    overseerScript: >
      page.manualWait();  
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//span[@class='tabComboBoxName' and text()='All']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(2000);
      await page.evaluate(() => { document.evaluate("//span[@class='tabMenuItemName' and text()='Confirmed']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere2", "ctpclickhere2"); });
      page.click("span[ctpclickhere2]");
      await page.waitForDelay(10000);
      page.done();
    message: clicking confirmed cases in dropdown

  MI:
    overseerScript: page.manualWait(); await page.waitForDelay(30000); page.done();
    message: waiting for MI quaternary

  MP:
    overseerScript: >
      page.manualWait();
      await page.waitForSelector(".tab-title:nth-of-type(3)");
      page.click(".tab-title:nth-of-type(3)");
      await page.waitForDelay(30000);
      page.done();
    message: custom click logic for MP quaternary dashboard
   
  NC:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("a[title='DEATHS by Date of Death'");
      await page.waitForDelay(5000);
      await page.evaluate(() => { document.querySelector("a[title='DEATHS by Date of Death'").parentElement.firstChild.setAttribute("ctpclickhere", "ctpclickhere"); });
      await page.waitForDelay(1000);
      page.click("[ctpclickhere]");
      await page.waitForDelay(10000);
      page.done();

    message: clicking on "deaths by date of death". 

  NE:
    renderSettings:
      viewport:
        width: 2000
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//div[text()='Deaths']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("div[ctpclickhere]");
      await page.waitForDelay(20000);
      page.done();

    message: clicking on "Deaths".

  NH:
    overseerScript: >
      page.manualWait(); 
      await page.waitForSelector("a[title='Antibody Tests - Test Based'");
      await page.waitForDelay(5000);
      await page.evaluate(() => { document.querySelector("a[title='Antibody Tests - Test Based'").parentElement.firstChild.setAttribute("ctpclickhere", "ctpclickhere"); });
      await page.waitForDelay(1000);
      page.click("[ctpclickhere]");
      await page.waitForDelay(10000);
      page.done();

    message: clicking on 'Antibody Tests - Test Based'. 
    
  NY:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.move(1061, 1204);
      await page.waitForDelay(10000);
      page.done();
    message: hover over hospitalizations for NY quaternary         

  NV:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.move(920, 406);
      page.mouse.click(920, 406);
      await page.waitForDelay(8000);
      page.done();
    message: hospitalizations for NV quaternary

  PR:
    overseerScript: >
      await page.waitForNavigation({waitUntil:"domcontentloaded"});
      await page.waitForSelector("#ember906");
      page.click("#ember906");
      page.done();
    message: click button for PR recoveries ("Convalecientes")

  TX:
    renderSettings:
      viewport:
        width: 2000
    overseerScript: >
      page.manualWait();  
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//div[text()='Hospitals - Statewide']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("div[ctpclickhere]");
      await page.waitForDelay(20000);
      page.done();
    message: clicking on "Hospitals - Statewide" tab. Also widening viewport so that tab is visible.

  WA:
    requestSettings:
      maxWait: 180000
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'Healthcare')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(40000);
      await page.evaluate(() => { document.evaluate("//button/span[contains(text(),'staffed beds occupied by COVID-19')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere1", "ctpclickhere1"); });
      page.click("span[ctpclickhere1]");
      await page.waitForDelay(60000);
      page.done();
    message: clicking on buttons for WA quaternary

  WI:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(6000);
      await page.waitForSelector("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(1) input");
      page.click("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(1) input");
      await page.waitForDelay(5000);
      page.done();
    message: WI confirmed deaths for quaternary


quinary:
  
  AR:
    renderSettings:
      clipRectangle:
        width: 1400
        height: 1400
    overseerScript: >
      page.manualWait();
      await page.waitForSelector("span.ember-view.tab-title:nth-of-type(3)");
      page.click("span.ember-view.tab-title:nth-of-type(3)");
      await page.waitForDelay(10000);
      page.done();
    message: clicking on "Deaths" tab for AR quinary

  AZ:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.click(880, 1100);
      await page.waitForDelay(30000);
      page.done();
    message: clicking on deaths for AZ quinary

  CO:
    renderSettings:
      viewport:
        width: 2000
    overseerScript: >
      await page.waitForSelector("a.ckeditor-accordion-toggler");
      await page.evaluate(() => { document.evaluate("//a[contains(text(),'Hospital')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("a[ctpclickhere]");
      await page.evaluate(() => { document.evaluate("//a[contains(text(),'Case')]", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere1", "ctpclickhere1"); });
      page.click("a[ctpclickhere1]");
      page.done();
    message: clicking on case and hospital data summary toggles for CO quinary

    
  HI: 
    requestSettings:
      maxWait: 90000
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(80000); 
      page.done();
    message: adding manual wait for HI of 80 seconds and max wait
 
  IA:
    overseerScript: >
      page.manualWait(); 
      await page.waitForDelay(45000); 
      page.done();
    message: wait for IA quinary
    
  ME:
    overseerScript: >
      page.manualWait();  
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//span[@class='tabComboBoxName' and text()='All']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("span[ctpclickhere]");
      await page.waitForDelay(2000);
      await page.evaluate(() => { document.evaluate("//span[@class='tabMenuItemName' and text()='Probable']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere2", "ctpclickhere2"); });
      page.click("span[ctpclickhere2]");
      await page.waitForDelay(10000);
      page.done();
    message: clicking probable cases in dropdown

  NE:
    renderSettings:
      viewport:
        width: 2000
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(20000);
      await page.evaluate(() => { document.evaluate("//div[text()='Recoveries']", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.setAttribute("ctpclickhere", "ctpclickhere"); });
      page.click("div[ctpclickhere]");
      await page.waitForDelay(20000);
      page.done();
    message: clicking on "Recoveries" for NE quinary

  NY:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.move(1061, 1212);
      await page.waitForDelay(10000);
      page.done();
    message: hover over ICU for NY quinary             

  PR:
    overseerScript: >
      await page.waitForNavigation({waitUntil:"domcontentloaded"});
      await page.waitForSelector("#ember772");
      page.click("#ember772");
      page.done();
    message: click button for PR confirmed Deaths ("Muertes Confirmades")
    
  NV:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(10000);
      page.mouse.move(926, 618);
      await page.waitForDelay(10000);
      page.done();
    message: hover over ICU and ventilators for NV quinary

  WI:
    overseerScript: >
      page.manualWait();
      await page.waitForDelay(6000);
      await page.waitForSelector("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(2) input");
      page.click("#tableau_base_widget_ParameterControl_1 div[role='radio']:nth-child(2) input");
      await page.waitForDelay(5000);
      page.done();
    message: WI probable deaths for quinary
